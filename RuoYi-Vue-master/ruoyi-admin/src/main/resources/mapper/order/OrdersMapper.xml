<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.tompSys.mapper.OrdersMapper">
    
    <resultMap type="Orders" id="OrdersResult">
        <result property="orderId"    column="order_id"    />
        <result property="customerId"    column="customer_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="status"    column="status"    />
        <result property="cancelReason"    column="cancel_reason"    />
        <result property="totalAmount"    column="total_amount"    />
    </resultMap>

    <resultMap id="OrdersSubOrderResult" type="Orders" extends="OrdersResult">
        <collection property="subOrderList" ofType="SubOrder" column="order_id" select="selectSubOrderList" />
    </resultMap>

    <resultMap type="SubOrder" id="SubOrderResult">
        <result property="subOrderId"    column="sub_order_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="productId"    column="product_id"    />
        <result property="quantity"    column="quantity"    />
        <result property="deadline"    column="deadline"    />
        <result property="qualityStandard"    column="quality_standard"    />
        <result property="productionFile"    column="production_file"    />
    </resultMap>

    <sql id="selectOrdersVo">
        select order_id, customer_id, create_time, status, cancel_reason, total_amount from orders
    </sql>

    <select id="selectOrdersList" parameterType="Orders" resultMap="OrdersResult">
        <include refid="selectOrdersVo"/>
        <where>  
            <if test="orderId != null "> and order_id = #{orderId}</if>
            <if test="customerId != null "> and customer_id = #{customerId}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="cancelReason != null  and cancelReason != ''"> and cancel_reason = #{cancelReason}</if>
            <if test="totalAmount != null "> and total_amount = #{totalAmount}</if>
        </where>
    </select>
    
    <select id="selectOrdersByOrderId" parameterType="Long" resultMap="OrdersSubOrderResult">
        select order_id, customer_id, create_time, status, cancel_reason, total_amount
        from orders
        where order_id = #{orderId}
    </select>

    <select id="selectSubOrderList" resultMap="SubOrderResult">
        select sub_order_id, order_id, product_id, quantity, deadline, quality_standard, production_file
        from sub_order
        where order_id = #{order_id}
    </select>

    <insert id="insertOrders" parameterType="Orders" useGeneratedKeys="true" keyProperty="orderId">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null">customer_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="status != null">status,</if>
            <if test="cancelReason != null">cancel_reason,</if>
            <if test="totalAmount != null">total_amount,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerId != null">#{customerId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="status != null">#{status},</if>
            <if test="cancelReason != null">#{cancelReason},</if>
            <if test="totalAmount != null">#{totalAmount},</if>
         </trim>
    </insert>

    <update id="updateOrders" parameterType="Orders">
        update orders
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerId != null">customer_id = #{customerId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="cancelReason != null">cancel_reason = #{cancelReason},</if>
            <if test="totalAmount != null">total_amount = #{totalAmount},</if>
        </trim>
        where order_id = #{orderId}
    </update>

    <!-- 删除关联的production_plan -->
    <delete id="deleteProductionPlanByOrderId" parameterType="Long">
        DELETE FROM production_plan
        WHERE sub_order_id IN (
            SELECT sub_order_id
            FROM sub_order
            WHERE order_id = #{orderId}
        )
    </delete>
    <delete id="deleteProductionPlanByOrderIds" parameterType="String">
        DELETE FROM production_plan
        WHERE sub_order_id IN (
            SELECT sub_order_id
            FROM sub_order
            WHERE order_id in
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
        )
    </delete>

    <delete id="deleteOrdersByOrderId" parameterType="Long">
        delete from orders where order_id = #{orderId}
    </delete>

    <delete id="deleteOrdersByOrderIds" parameterType="String">
        delete from orders where order_id in 
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>
    
    <delete id="deleteSubOrderByOrderIds" parameterType="String">
        delete from sub_order where order_id in 
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

    <delete id="deleteSubOrderByOrderId" parameterType="Long">
        delete from sub_order where order_id = #{orderId}
    </delete>

    <insert id="batchSubOrder">
        insert into sub_order( sub_order_id, order_id, product_id, quantity, deadline, quality_standard, production_file) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.subOrderId}, #{item.orderId}, #{item.productId}, #{item.quantity}, #{item.deadline}, #{item.qualityStandard}, #{item.productionFile})
        </foreach>
    </insert>
</mapper>